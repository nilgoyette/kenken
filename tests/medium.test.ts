import { expect } from "jsr:@std/expect";

import { KenKen } from "../src/kenken.ts"
import { Solver } from "../src/solver.ts";

Deno.test("56429 +-/*", () => {
    const k = new KenKen(5);
    k.add([[0, 1], [0, 2]], "-", 1);
    k.add([[0, 3], [1, 3]], "-", 2);
    k.add([[2, 3], [3, 3]], "-", 4);
    k.add([[4, 0], [4, 1]], "-", 2);
    k.add([[4, 2], [4, 3]], "-", 2);
    k.add([[3, 4], [4, 4]], "-", 1);
    k.add([[1, 2], [2, 2], [3, 2]], "+", 11);
    k.add([[2, 0], [3, 0]], "/", 2);
    k.add([[0, 4], [1, 4]], "/", 2);
    k.add([[1, 0], [1, 1], [2, 1]], "*", 15);
    k.add_eq([0, 0], 5);
    k.add_eq([2, 4], 3);
    k.add_eq([3, 1], 3);
    const s = new Solver(k, false);
    expect(s.solve()).toEqual([
        [5, 4, 3, 2, 1],
        [3, 1, 5, 4, 2],
        [2, 5, 4, 1, 3],
        [1, 3, 2, 5, 4],
        [4, 2, 1, 3, 5]
    ]);
});

Deno.test("11027 +-/*", () => {
    const k = new KenKen(5);
    k.add([[0, 0], [1, 0]], "-", 1);
    k.add([[0, 1], [0, 2]], "-", 1);
    k.add([[0, 4], [1, 4]], "-", 4);
    k.add([[2, 2], [2, 3]], "-", 2);
    k.add([[3, 3], [4, 3]], "-", 2);
    k.add([[2, 0], [2, 1], [3, 1]], "+", 9);
    k.add([[3, 0], [4, 0]], "+", 7);
    k.add([[1, 1], [1, 2]], "*", 6);
    k.add([[4, 1], [4, 2], [3, 2]], "*", 4);
    k.add([[0, 3], [1, 3]], "/", 2);
    k.add([[3, 4], [4, 4]], "/", 2);
    k.add_eq([2, 4], 3);
    const s = new Solver(k, false);
    expect(s.solve()).toEqual([
        [3, 4, 5, 2, 1],
        [4, 2, 3, 1, 5],
        [1, 5, 2, 4, 3],
        [2, 3, 1, 5, 4],
        [5, 1, 4, 3, 2]
    ]);
});
